syntax = "proto3";

package analysis;

option go_package = "./go-server/generated";

service AnalysisService {
    rpc AnalyzeData(AnalysisRequest) returns (AnalysisResponse);
}

message AnalysisRequest {
    bytes file_content = 1;
    string file_name = 2;
}

message AnalysisResponse {
    repeated DescriptiveStatistics descriptives = 1;
    repeated NormalityTestResult normality_tests = 2;
    repeated ConfidenceInterval confidence_intervals = 3;
    repeated HypothesisTestResult hypothesis_tests = 4;
    repeated PearsonChiSquareTestResult pearson_chi_square_results = 5;
    CorrelationResult correlation = 6;
    repeated RegressionResult regressions = 7;
    repeated BinomialAnalysisResult binomial_analysis_results = 8;
    repeated string processing_log = 9;
}

message DescriptiveStatistics {
    string variable_name = 1;
    int64 count = 2;
    double mean = 3;
    double median = 4;
    repeated double mode = 5;
    double variance = 6;
    double std_dev = 7;
    double variation_coefficient = 8;
    double skewness = 9;
    double kurtosis = 10;
    double min_value = 11;
    double max_value = 12;
}

message NormalityTestResult {
    string variable_name = 1;
    string test_name = 2;
    double statistic = 3;
    double p_value = 4;
    string conclusion = 5;
}

message ConfidenceInterval {
    string variable_name = 1;
    string parameter_name = 2;
    double lower_bound = 3;
    double upper_bound = 4;
    double confidence_level = 5;
}

message HypothesisTestResult {
    string test_name = 1;
    string description = 2;
    double statistic = 3;
    double p_value = 4;
    string conclusion = 5;
}

message PearsonChiSquareTestResult {
    string variable_name = 1;
    double statistic = 2;
    int32 degrees_of_freedom = 3;
    double p_value = 4;
    string conclusion = 5;
    string test_name = 6;
    string distribution = 7;
}

message CorrelationResult {
    message PearsonCorrelation {
        string variable1 = 1;
        string variable2 = 2;
        double coefficient = 3;
        double p_value = 4;
    }
    message SpearmanCorrelation {
        string variable1 = 1;
        string variable2 = 2;
        double coefficient = 3;
        double p_value = 4;
    }

    repeated PearsonCorrelation pearson = 1;
    repeated SpearmanCorrelation spearman = 2;
}

message RegressionResult {
    string model_type = 1;
    string dependent_variable = 2;
    repeated string independent_variables = 3;

    double r_squared = 4;
    double adjusted_r_squared = 5;
    double f_statistic = 6;
    double f_p_value = 7;

    message Coefficient {
        string variable_name = 1;
        double estimate = 2;
        double std_error = 3;
        double t_statistic = 4;
        double p_value = 5;
    }
    repeated Coefficient coefficients = 8;
}

message BinomialAnalysisResult {
    string variable_name = 1;
    int64 total_experiments = 2;
    int64 inferred_n = 3;
    int64 total_successes = 4;
    double estimated_prob = 5;
    double ci_lower = 6;
    double ci_upper = 7;
    double confidence_level = 8;
    double gof_statistic = 9;
    double gof_p_value = 10;
    string gof_conclusion = 11;
    bool gof_warning = 12;
}