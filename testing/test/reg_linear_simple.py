import pandas as pd
import statsmodels.api as sm
from scipy.stats import shapiro
import numpy as np

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df = pd.read_csv('../datasets/Reg_Linear_Simple.csv')
X = df['X']
y = df['Y']

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –¥–ª—è —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —á–ª–µ–Ω–∞
X_with_const = sm.add_constant(X)

# –°–æ–∑–¥–∞–Ω–∏–µ –∏ –æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
model = sm.OLS(y, X_with_const)
results = model.fit()

# –û—Å—Ç–∞—Ç–∫–∏
residuals = results.resid

# SSE (—Å—É–º–º–∞ –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ –æ—Å—Ç–∞—Ç–∫–æ–≤)
sse = np.sum(residuals ** 2)

# –¢–µ—Å—Ç –®–∞–ø–∏—Ä–æ-–£–∏–ª–∫–∞ –Ω–∞ –Ω–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—å –æ—Å—Ç–∞—Ç–∫–æ–≤
shapiro_stat, shapiro_p = shapiro(residuals)

# –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
print("üìä –õ–∏–Ω–µ–π–Ω–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è —á–µ—Ä–µ–∑ statsmodels.OLS")
print("============================================")
print("–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –º–æ–¥–µ–ª–∏:")
print(results.params)

print("\nT-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ P-value –ø–æ –∫–∞–∂–¥–æ–º—É –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—É:")
print(results.tvalues)
print(results.pvalues)

print("\n–î–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã (95%):")
print(results.conf_int())

print("\nR^2:", round(results.rsquared, 4))
print("Adjusted R^2:", round(results.rsquared_adj, 4))
print("F-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:", round(results.fvalue, 4))
print("P-value (F):", round(results.f_pvalue, 4))
print("SSE:", round(sse, 4))

print("\nüß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ (Shapiro-Wilk):")
print(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {shapiro_stat:.4f}, P-value: {shapiro_p:.4f}")
print("–í—ã–≤–æ–¥:", "‚úÖ –û—Å—Ç–∞—Ç–∫–∏ –Ω–æ—Ä–º–∞–ª—å–Ω—ã" if shapiro_p > 0.05 else "‚ö†Ô∏è –û—Å—Ç–∞—Ç–∫–∏ –Ω–µ –Ω–æ—Ä–º–∞–ª—å–Ω—ã")
